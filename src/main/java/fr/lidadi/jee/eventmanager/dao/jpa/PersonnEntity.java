/*
 * Created on 17 oct. 2016 ( Time 17:17:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package fr.lidadi.jee.eventmanager.dao.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "PERSONN"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="PERSONN", schema="EVENTMANAGER" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PersonnEntity.countAll", query="SELECT COUNT(x) FROM PersonnEntity x" )
} )
public class PersonnEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Lob
    @Column(name="ID", nullable=false)
    private byte[]     id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="MAIL", nullable=false, length=255)
    private String     mail         ;

    @Column(name="PASSWORD", nullable=false, length=255)
    private String     password     ;

    @Column(name="FIRST_NAME", length=255)
    private String     firstName    ;

    @Column(name="LAST_NAME", length=255)
    private String     lastName     ;

    @Column(name="COMPANY", length=255)
    private String     company      ;

    @Temporal(TemporalType.DATE)
    @Column(name="UPDATED", nullable=false)
    private Date       updated      ;

    @Temporal(TemporalType.DATE)
    @Column(name="CREATED", nullable=false)
    private Date       created      ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(mappedBy="listOfPersonn", targetEntity=EventEntity.class)
    private List<EventEntity> listOfEvent ;

    @ManyToMany(mappedBy="listOfPersonn2", targetEntity=EventEntity.class)
    private List<EventEntity> listOfEvent2;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PersonnEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( byte[] id ) {
        this.id = id ;
    }
    public byte[] getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : MAIL ( VARCHAR ) 
    public void setMail( String mail ) {
        this.mail = mail;
    }
    public String getMail() {
        return this.mail;
    }

    //--- DATABASE MAPPING : PASSWORD ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : FIRST_NAME ( VARCHAR ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : LAST_NAME ( VARCHAR ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : COMPANY ( VARCHAR ) 
    public void setCompany( String company ) {
        this.company = company;
    }
    public String getCompany() {
        return this.company;
    }

    //--- DATABASE MAPPING : UPDATED ( DATE ) 
    public void setUpdated( Date updated ) {
        this.updated = updated;
    }
    public Date getUpdated() {
        return this.updated;
    }

    //--- DATABASE MAPPING : CREATED ( DATE ) 
    public void setCreated( Date created ) {
        this.created = created;
    }
    public Date getCreated() {
        return this.created;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfEvent( List<EventEntity> listOfEvent ) {
        this.listOfEvent = listOfEvent;
    }
    public List<EventEntity> getListOfEvent() {
        return this.listOfEvent;
    }

    public void setListOfEvent2( List<EventEntity> listOfEvent2 ) {
        this.listOfEvent2 = listOfEvent2;
    }
    public List<EventEntity> getListOfEvent2() {
        return this.listOfEvent2;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        // attribute 'id' not usable (type = byte[])
        sb.append("]:"); 
        sb.append(mail);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(company);
        sb.append("|");
        sb.append(updated);
        sb.append("|");
        sb.append(created);
        return sb.toString(); 
    } 

}
