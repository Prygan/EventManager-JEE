/*
 * Created on 17 oct. 2016 ( Time 17:17:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a composite Primary Key

package fr.lidadi.jee.eventmanager.app.slug;

import fr.lidadi.jee.eventmanager.app.event.Event;
import fr.lidadi.jee.eventmanager.framework.dao.Entity;

import java.io.Serializable;
import java.util.UUID;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.EmbeddedId;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;

import fr.lidadi.jee.eventmanager.app.event.Event;
import fr.lidadi.jee.eventmanager.framework.dao.Entity;

/**
 * Persistent class for entity stored in table "SLUG"
 *
 * @author Telosys Tools Generator
 */

@javax.persistence.Entity(name = "slug")
public class Slug implements Entity {


    // ----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )
    // ----------------------------------------------------------------------
    @EmbeddedId
    private SlugKey compositePrimaryKey;

    // ----------------------------------------------------------------------
    // ENTITY DATA FIELDS
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    // ----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name = "EVENT_ID", referencedColumnName = "ID", insertable = false, updatable = false)
    private Event event;

    // ----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    // ----------------------------------------------------------------------
    public Slug() {
        super();
        this.compositePrimaryKey = new SlugKey();
    }

    public Slug(UUID uuid, String slug, Event event) {
        super();
        this.compositePrimaryKey = new SlugKey(uuid, slug);
        this.event = event;
    }

    // ----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY
    // ----------------------------------------------------------------------
    public void setEventId(UUID eventId) {
        this.compositePrimaryKey.setEventId(eventId);
    }

    public UUID getEventId() {
        return this.compositePrimaryKey.getEventId();
    }

    public void setSlug(String slug) {
        this.compositePrimaryKey.setSlug(slug);
    }

    public String getSlug() {
        return this.compositePrimaryKey.getSlug();
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    // ----------------------------------------------------------------------
    public void setEvent(Event event) {
        this.event = event;
    }

    public Event getEvent() {
        return this.event;
    }

    // ----------------------------------------------------------------------
    // toString METHOD
    // ----------------------------------------------------------------------
    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append("[");
        if (compositePrimaryKey != null) {
            sb.append(compositePrimaryKey.toString());
        } else {
            sb.append("(null-key)");
        }
        sb.append("]:");
        return sb.toString();
    }

    @Override
    public Object getPrimaryKey() {
        return compositePrimaryKey;
    }

    @Embeddable
    public class SlugKey implements Serializable {
        private static final long serialVersionUID = 1L;

        // ----------------------------------------------------------------------
        // ENTITY KEY ATTRIBUTES
        // ----------------------------------------------------------------------
        @Lob
        @Column(name = "EVENT_ID", nullable = false)
        private UUID eventId;

        @Column(name = "SLUG", nullable = false, length = 255)
        private String slug;

        // ----------------------------------------------------------------------
        // CONSTRUCTORS
        // ----------------------------------------------------------------------
        public SlugKey() {
            super();
        }

        public SlugKey(UUID eventId, String slug) {
            super();
            this.eventId = eventId;
            this.slug = slug;
        }

        // ----------------------------------------------------------------------
        // GETTERS & SETTERS FOR KEY FIELDS
        // ----------------------------------------------------------------------
        public void setEventId(UUID value) {
            this.eventId = value;
        }

        public UUID getEventId() {
            return this.eventId;
        }

        public void setSlug(String value) {
            this.slug = value;
        }

        public String getSlug() {
            return this.slug;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o)
                return true;
            if (o == null || getClass() != o.getClass())
                return false;

            SlugKey that = (SlugKey) o;

            if (getEventId() != null ? !getEventId().equals(that.getEventId()) : that.getEventId() != null)
                return false;
            return getSlug() != null ? getSlug().equals(that.getSlug()) : that.getSlug() == null;

        }

        @Override
        public int hashCode() {
            int result = getEventId() != null ? getEventId().hashCode() : 0;
            result = 31 * result + (getSlug() != null ? getSlug().hashCode() : 0);
            return result;
        }

        // ----------------------------------------------------------------------
        // toString METHOD
        // ----------------------------------------------------------------------
        public String toString() {
            StringBuffer sb = new StringBuffer();
            sb.append(eventId);
            sb.append("|");
            sb.append(slug);
            return sb.toString();
        }
    }

}
